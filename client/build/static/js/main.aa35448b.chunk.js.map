{"version":3,"sources":["components/Header.js","Context/AppReducer.js","Context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionsList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","toString","replace","IncomeExpenses","amounts","income","expense","numberWithCommas","num","className","Transaction","sign","text","Math","abs","onClick","TransactionsList","useEffect","idx","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa35448b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n           Expense Tracker \r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'TRANSACTION_ERROR': \r\n        return {\r\n            ...state,\r\n            error: action.payload\r\n        }\r\n        default: \r\n          return state;\r\n    }\r\n}","import React, {createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// initial state\r\n\r\nconst initialState = {\r\n    transactions:  [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n// Create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // actions\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n            \r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    } \r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            error: state.error,\r\n            loading: state.loading,\r\n            getTransactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const numberWithCommas = (num) => {\r\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>{numberWithCommas(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1\r\n    ).toFixed(2);\r\n\r\n    const numberWithCommas = (num) => {\r\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    return (\r\n        <div className='inc-exp-container'>\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className='money plus'>${numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expenses</h4>\r\n                <p className='money minus'>${numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    const numberWithCommas = (num) => {\r\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n          {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\r\n          <button onClick={() => deleteTransaction(transaction._id)} className='delete-btn'>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport {  Transaction } from './Transaction';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const TransactionsList = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n      getTransactions();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n          <h3>History</h3>\r\n          <ul className='list'>\r\n          {transactions.map((transaction, idx) => (<Transaction key={idx} transaction={transaction} />))}\r\n              \r\n          </ul>  \r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n        setText('');\r\n        setAmount(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='form-control'>\r\n                    <label htmlFor='text'>Text</label>\r\n                    <input type='text' value={text} onChange={(e) => setText(e.target.value)} placeholder='Enter text...' />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='Amount'>\r\n                        Amount <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type='number' value={amount} onChange={(e) => setAmount(e.target.value)\r\n                    } placeholder='Enter amount...' />\r\n                </div>\r\n                <button className='btn'>Add Transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport  { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport {  TransactionsList } from './components/TransactionsList'; \nimport {  AddTransaction } from './components/AddTransaction'; \nimport { GlobalProvider } from './Context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpenses />\n        <TransactionsList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}